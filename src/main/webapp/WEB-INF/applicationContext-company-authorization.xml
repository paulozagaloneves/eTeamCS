<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
  - Application context containing authentication beans.
  -
  - Used by all artifacts.
  -
  - $Id: applicationContext-common-authorization.xml 29 2005-06-25 15:55:48Z igod $
  -->

<beans>

   <!-- ~~~~~~~~~~~~~~~~~~ "BEFORE INVOCATION" AUTHORIZATION DEFINITIONS ~~~~~~~~~~~~~~~~ -->

   <!-- ACL permission masks used by this application -->
   <bean id="org.acegisecurity.acl.basic.SimpleAclEntry.ADMINISTRATION" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
      <property name="staticField"><value>org.acegisecurity.acl.basic.SimpleAclEntry.ADMINISTRATION</value></property>
   </bean>
   <bean id="org.acegisecurity.acl.basic.SimpleAclEntry.READ" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
      <property name="staticField"><value>org.acegisecurity.acl.basic.SimpleAclEntry.READ</value></property>
   </bean>
   <bean id="org.acegisecurity.acl.basic.SimpleAclEntry.DELETE" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
      <property name="staticField"><value>org.acegisecurity.acl.basic.SimpleAclEntry.DELETE</value></property>
   </bean>


   <!-- An access decision voter that reads ROLE_* configuration settings -->
   <bean id="roleVoter" class="org.acegisecurity.vote.RoleVoter"/>

   <!-- An access decision voter that reads ACL_COMPANY_READ configuration settings -->
   <bean id="aclCompanyReadVoter" class="org.acegisecurity.vote.BasicAclEntryVoter">
      <property name="processConfigAttribute"><value>ACL_COMPANY_READ</value></property>
      <property name="processDomainObjectClass"><value>org.eteamcs.model.Companie</value></property>
      <property name="aclManager"><ref local="aclManager"/></property>
      <property name="requirePermission">
      <list>
          <ref local="org.acegisecurity.acl.basic.SimpleAclEntry.ADMINISTRATION"/>
          <ref local="org.acegisecurity.acl.basic.SimpleAclEntry.READ"/>
      </list>
      </property>
   </bean>

   <!-- An access decision voter that reads ACL_COMPANY_DELETE configuration settings -->
   <bean id="aclCompanyDeleteVoter" class="org.acegisecurity.vote.BasicAclEntryVoter">
      <property name="processConfigAttribute"><value>ACL_COMPANY_DELETE</value></property>
      <property name="processDomainObjectClass"><value>org.eteamcs.model.Companie</value></property>
      <property name="aclManager"><ref local="aclManager"/></property>
      <property name="requirePermission">
      <list>
          <ref local="org.acegisecurity.acl.basic.SimpleAclEntry.ADMINISTRATION"/>
          <ref local="org.acegisecurity.acl.basic.SimpleAclEntry.DELETE"/>
      </list>
      </property>
   </bean>

   <!-- An access decision voter that reads ACL_COMPANY_ADMIN configuration settings -->
   <bean id="aclCompanyAdminVoter" class="org.acegisecurity.vote.BasicAclEntryVoter">
      <property name="processConfigAttribute"><value>ACL_COMPANY_ADMIN</value></property>
      <property name="processDomainObjectClass"><value>org.eteamcs.model.Companie</value></property>
      <property name="aclManager"><ref local="aclManager"/></property>
      <property name="requirePermission">
      <list>
          <ref local="org.acegisecurity.acl.basic.SimpleAclEntry.ADMINISTRATION"/>
      </list>
      </property>
   </bean>

   <!-- An access decision manager used by the business objects -->
   <bean id="businessAccessDecisionManager" class="org.acegisecurity.vote.AffirmativeBased">
      <property name="allowIfAllAbstainDecisions"><value>false</value></property>
      <property name="decisionVoters">
         <list>
            <ref local="roleVoter"/>
            <ref local="aclCompanyReadVoter"/>
            <ref local="aclCompanyDeleteVoter"/>
            <ref local="aclCompanyAdminVoter"/>
         </list>
      </property>
   </bean>

   <!-- ========= ACCESS CONTROL LIST LOOKUP MANAGER DEFINITIONS ========= -->

   <bean id="aclManager" class="org.acegisecurity.acl.AclProviderManager">
      <property name="providers">
         <list>
            <ref local="basicAclProvider"/>
         </list>
      </property>
   </bean>
   <bean id="aclCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
    
   <bean id="aclCacheBackend" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
      <property name="cacheManager">
         <ref local="aclCacheManager"/>
      </property>
      <property name="cacheName">
         <value>aclCache</value>
      </property>
      <property name="timeToIdle">
         <value>300</value>
      </property>
      <property name="timeToLive">
         <value>300</value>
      </property>
      <property name="maxElementsInMemory">
         <value>20000</value>
      </property>
   </bean>
   
   <bean id="aclCache" class="org.acegisecurity.acl.basic.cache.EhCacheBasedAclEntryCache">
         <property name="cache"><ref local="aclCacheBackend"/></property>
   </bean>  
   
   <bean id="basicAclProvider" class="org.acegisecurity.acl.basic.BasicAclProvider">
      <property name="basicAclDao"><ref local="basicAclExtendedDao"/></property>
      <property name="basicAclEntryCache"><ref local="aclCache"/></property>
   </bean>   

   
   <!-- bean id="basicAclProvider" class="org.acegisecurity.acl.basic.BasicAclProvider">
      <property name="basicAclDao"><ref local="basicAclExtendedDao"/></property>
   </bean-->

   <bean id="basicAclExtendedDao" class="org.eteamcs.dao.jdbc.JdbcExtendedDaoImpl">
      <property name="dataSource"><ref bean="dataSource"/></property>
   </bean>

   <!-- ============== "AFTER INTERCEPTION" AUTHORIZATION DEFINITIONS =========== -->

   <bean id="afterInvocationManager" class="org.acegisecurity.afterinvocation.AfterInvocationProviderManager">
      <property name="providers">
         <list>
            <ref local="afterAclRead"/>
            <ref local="afterAclCollectionRead"/>
         </list>
      </property>
   </bean>
   
   <!-- Processes AFTER_ACL_COLLECTION_READ configuration settings -->
   <bean id="afterAclCollectionRead" class="org.acegisecurity.afterinvocation.BasicAclEntryAfterInvocationCollectionFilteringProvider">
      <property name="aclManager"><ref local="aclManager"/></property>
      <property name="requirePermission">
      <list>
          <ref local="org.acegisecurity.acl.basic.SimpleAclEntry.ADMINISTRATION"/>
          <ref local="org.acegisecurity.acl.basic.SimpleAclEntry.READ"/>
      </list>
      </property>
   </bean>
   
   <!-- Processes AFTER_ACL_READ configuration settings -->
   <bean id="afterAclRead" class="org.acegisecurity.afterinvocation.BasicAclEntryAfterInvocationProvider">
      <property name="aclManager"><ref local="aclManager"/></property>
      <property name="requirePermission">
      <list>
          <ref local="org.acegisecurity.acl.basic.SimpleAclEntry.ADMINISTRATION"/>
          <ref local="org.acegisecurity.acl.basic.SimpleAclEntry.READ"/>
      </list>
      </property>
   </bean>


   <!-- ================= METHOD INVOCATION AUTHORIZATION ==================== -->

   <!-- getRandomContact() is public.
   
       The create, getAll, getById etc have ROLE_USER to ensure user is
      authenticated (all users hold ROLE_USER in this application).
      
      The delete and update methods don't need a ROLE_USER as they will
      ensure the user is authenticated via their ACL_CONTACT_DELETE or
      ACL_CONTACT_READ attribute, which also ensures the user has permission
      to the Contact presented as a method argument.
   -->
   <bean id="companyManagerSecurity" class="org.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor">
      <property name="authenticationManager"><ref bean="authenticationManager"/></property>
      <property name="accessDecisionManager"><ref local="businessAccessDecisionManager"/></property>
      <property name="afterInvocationManager"><ref local="afterInvocationManager"/></property>
      <property name="objectDefinitionSource">
         <value>
            org.eteamcs.service.ICompanieManager.saveCompanie=ROLE_SUPERVISOR
            org.eteamcs.service.ICompanieManager.removeCompanie=ROLE_SUPERVISOR
         </value>
      </property>
   </bean>
</beans>
